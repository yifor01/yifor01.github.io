[{"title":"Meta Segment Anything","path":"/2023/04/08/20230408/","content":"本文介紹 Meta FAIR 新出的套件 segment-anything 的實作方法 &amp; 結果 Demo 網站 https://segment-anything.com/https://segment-anything.com/ DescriptionGoal 自動化 segment 任務 (zero shot), 並可以根據 prompt (point, box, text) 進行調整 Data SA-1B: 高達 11M 張圖片, 1.1B 個 mask 結果 (由 SAM 生成) Result僅實驗自動化切割功能, 文字 prompt 功能未釋出 插畫自動切割 原圖 圖片來源: midjourney 產生 Segment 結果 部分星星沒有被切割出來是因為有設定 threshold 來避免切出太小的物件, 共 109 個區域 Segment 後處理 挑選最大面積的 6 個物件顯示 Wafer Map 自動切割 原圖 圖片來源: Development of High Power Green Light Emitting Diode Chips paper Segment 結果 部分文字沒有被切割出來是因為有設定 threshold 來避免切出太小的物件, 共 147 個區域 Segment 後處理 挑選最大面積的 4 個物件顯示 Model Architecture圖片來源: segment-anything paper PracticeStep 1: 模型下載SAM model 下載 download, 放入 model 資料夾中 123mkdir modelcd modelwget https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth Step 2: 讀入權重import 相關套件 &amp; load model weight 12345678from segment_anything import sam_model_registry, SamAutomaticMaskGenerator, SamPredictorsam_checkpoint = &quot;./model/sam_vit_h_4b8939.pth&quot;model_type = &quot;vit_h&quot;device = &quot;cuda&quot;sam = sam_model_registry[model_type](checkpoint=sam_checkpoint)sam.to(device=device) Step 3: 載入圖片用 cv2 載入圖片並轉為 array 形式 123import cv2image = cv2.imread(&#x27;./data/test.png&#x27;)image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB) Step 4: 設定模型參數 &amp; 預測套用 mask 生成器並設定相關參數, 實作後認為 points_per_side, pred_iou_thresh 較為重要。 points_per_side 是控制採樣點的個數, 直接影響到輸出 mask 的質量 pred_iou_thresh 是輸出 mask 機率的 threshold 輸出結果包含了每個 mask 結果的面積大小, bounding box, mask 座標等等。 12345678910mask_generator = SamAutomaticMaskGenerator( model=sam, points_per_side=32, pred_iou_thresh=0.9, stability_score_thresh=0.92, crop_n_layers=1, crop_n_points_downscale_factor=2, min_mask_region_area=100, # Requires open-cv to run post-processing)masks2 = mask_generator.generate(image) Step 5: 顯示分割結果依照 mask 面積大小排序對原圖進行 mask 著色 12345678910111213141516171819202122import numpy as npimport matplotlib.pyplot as pltdef show_anns(anns): if len(anns) == 0: return sorted_anns = sorted(anns, key=(lambda x: x[&#x27;area&#x27;]), reverse=True) ax = plt.gca() ax.set_autoscale_on(False) for ann in sorted_anns: m = ann[&#x27;segmentation&#x27;] img = np.ones((m.shape[0], m.shape[1], 3)) color_mask = np.random.random((1, 3)).tolist()[0] for i in range(3): img[:,:,i] = color_mask[i] ax.imshow(np.dstack((img, m*0.35)))plt.figure(figsize=(15,15))plt.imshow(image)show_anns(masks2)plt.axis(&#x27;off&#x27;)plt.show() Step 6: 去背結果建立一個 mask matrix 在乘上原本圖片 matrix 後, 即可得到去背的圖片 123456789101112final_mask = np.zeros(image.shape[:2],dtype=bool)for i in range(len(masks2)): final_mask +=masks2[i][&#x27;segmentation&#x27;]mask_image = image.copy()for i in range(3): mask_image[:,:,i] *=final_maskplt.figure(figsize=(15,15))plt.imshow(mask_image)plt.axis(&#x27;off&#x27;)plt.show()","tags":["practice","Meta"],"categories":["CV"]},{"title":"LLaMA 套件踩坑","path":"/2023/04/07/20230407/","content":"本文介紹 LLaMA 系列套件安裝踩過的一些坑和解法 bitsandbytes load_in_8bit error Root Cause: 系統預設的 bitsandbytes_cpu.so 與 cuda 版本不同 Action: 將自己的版本的 bitsandbytes_cuda&lt;cuda版號&gt;.so 替換為 bitsandbytes_cpu.so step1: mv lib/python3.9/site-packages/bitsandbytes/lib/bitsandbytes_cpu.so lib/python3.9/site-packages/bitsandbytes/lib/bitsandbytes_cuda114.so step2: cp lib/python3.9/site-packages/bitsandbytes/lib/bitsandbytes_cuda117.so lib/python3.9/site-packages/bitsandbytes/lib/bitsandbytes_cpu.so transformer 目前僅有 transformers-main 的版本支援 LlamaTokenizer 系列的子套件 12pip uninstall transformerspip install git+https://github.com/huggingface/transformers.git pytorch docker LLaMA 最低 python 環境要求為 python 3.8, 如何的套用現成 Docker Image? 以下是 pytorch 在 dockerhub 各版本對應到的 python 環境:","tags":["practice"],"categories":["NLP"]},{"path":"/about/index.html","content":"About Me一位誤入動物園的 NLP 新手, 專長是販賣各種動物周邊 (NLP 建模) 和 Boost 系列跑鞋 (ML 建模)。 Job ExperimentNowAI Engineer at TSMCDefect Report 自動化知識抽取模組2022 年 6 月Machine Learning Engineer at Invos既有產品品類多標籤分類模型新品牌、新品類自動化發現模型2022 年 3 月Senior Data Scientist at Wisers專利發表新詞發現算法⾏業專業詞挖掘算法商用 API 開發關鍵詞抽取模組 (包含新詞、熱詞、領域關鍵詞)購買意願模型 (包含中文、廣東話)評論分類模型英文情感分析模型技術研發自動化 POC tagging (支援 8個API, 14個客製化抽取算法)運動品牌知識圖譜優化特定實體的購買意願模型2020 年 2 月Data Scientist at GSSCRM Insight 產品維護 &amp; 新功能開發行銷最佳化 BI公司產品關鍵字廣告成效分析2019 年 7 月"},{"path":"/notes/index.html","content":"項目 競賽2022玉山人工智慧挑戰賽 - 你說可疑不可疑？ 疑似洗錢交易預測 https://github.com/ansonchang/esun2022https://github.com/ansonchang/esun2022 2021中鋼人工智慧挑戰賽 - 字元辨識 https://github.com/yifor01/CSC-OCR-competitionhttps://github.com/yifor01/CSC-OCR-competition 2020I'm the Best Coder Challenge! 2020 https://github.com/yifor01/High-Value-Customer-Forecast-Competitionhttps://github.com/yifor01/High-Value-Customer-Forecast-Competition"}]